{"version":3,"sources":["components/GetChoicesItem/styledComponent.js","components/GetChoicesItem/index.js","components/Game/styledComponent.js","components/Game/index.js","App.js","index.js"],"names":["ChoiceItemContainer","styled","li","withConfig","displayName","componentId","ChoiceButton","button","ButtonImage","img","GetChoicesItem","props","details","onSelectedButton","id","imageUrl","testids","toLowerCase","testIdName","concat","_jsx","children","onClick","type","alt","src","GameContainer","div","ResponsiveContainer","ScoreContainer","ScoreChoiceList","Heading","h1","ScoreCardContainer","ScoreDescription","p","ScoreHeading","PlayingButtonImagesContainer","ul","PopupButtonContainer","PopupButton","RulesImageContainer","CloseLineContainer","CloseLineButton","RulesImage","ResultPageContainer","ResultViewContainer","ResultsContainer","ResultPersonHeading","ResultImage","ResultHeadinBottom","PlayAgainButton","Game","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","state","showResult","score","myChoice","opponentChoice","resultMsg","selecteButton","choicesList","number","Math","floor","random","filter","eachChoice","randomDetails","opponentId","setState","prevState","onGetPlayButtons","map","onClickPlayAgain","getResult","_this$state","_jsxs","_inherits","_createClass","key","value","_this$state2","this","Popup","modal","trigger","close","RiCloseLine","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47af1290.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const ChoiceItemContainer = styled.li`\n  list-style-type: none;\n`\n\nexport const ChoiceButton = styled.button`\n  border: none;\n  outline: none;\n  background-color: transparent;\n  cursor: pointer;\n`\nexport const ButtonImage = styled.img`\n  height: 140px;\n  width: 140px;\n`\n","import {ChoiceItemContainer, ChoiceButton, ButtonImage} from './styledComponent'\n\nconst GetChoicesItem = props => {\n  const {details, onSelectedButton} = props\n  const {id, imageUrl} = details\n\n  const testids = id.toLowerCase()\n  const testIdName = `${testids}Button`\n\n  const buttonClicked = () => {\n    onSelectedButton(id)\n  }\n\n  return (\n    <ChoiceItemContainer>\n      <ChoiceButton\n        data-testid={testIdName}\n        onClick={buttonClicked}\n        type=\"button\"\n      >\n        <ButtonImage alt={id} src={imageUrl} />\n      </ChoiceButton>\n    </ChoiceItemContainer>\n  )\n}\nexport default GetChoicesItem\n","import styled from 'styled-components'\n\nexport const GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n  width: 100%;\n  background-color: #223a5f;\n  padding: 12px;\n`\n\nexport const ResponsiveContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-between;\n  align-items: center;\n  background-color: #223a5f;\n  width: 90%;\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nexport const ScoreContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border: 2px solid #ffffff;\n  border-radius: 8px;\n  padding: 12px;\n  padding-left: 28px;\n  padding-right: 28px;\n  align-items: center;\n  width: 100%;\n  max-width: 940px;\n  @media screen and (max-width: 768px) {\n    max-width: 520px;\n  }\n`\nexport const ScoreChoiceList = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nexport const Heading = styled.h1`\n  font-family: 'Bree Serif';\n  font-size: 18px;\n  font-weight: 600px;\n  color: #ffffff;\n  padding: 0px;\n  margin: 0px;\n`\n\nexport const ScoreCardContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  background-color: #ffffff;\n  border-radius: 12px;\n  height: 100px;\n  width: 140px;\n  @media screen and (max-width: 768px) {\n    height: 120px;\n    width: 100px;\n  }\n`\nexport const ScoreDescription = styled.p`\n  font-size: 18px;\n  font-family: 'Roboto';\n  font-weight: 700px;\n  color: #223a5f;\n  text-align: center;\n  margin-bottom: 0px;\n`\nexport const ScoreHeading = styled.p`\n  margin-top: 0px;\n  font-size: 38px;\n  font-family: 'Roboto';\n  font-weight: 800px;\n  color: #223a5f;\n  text-align: center;\n`\nexport const PlayingButtonImagesContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 0px;\n  margin: 0px;\n  padding-top: 100px;\n  padding-bottom: 48px;\n  width: 50%;\n  max-width: 400px;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n  }\n`\nexport const PopupButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  width: 100%;\n`\n\nexport const PopupButton = styled.button`\n  font-family: 'Bree Serif';\n  font-size: 14px;\n  background-color: #ffffff;\n  padding: 8px;\n  padding-left: 12px;\n  padding-right: 12px;\n  border-radius: 4px;\n`\nexport const RulesImageContainer = styled.div``\n\nexport const CloseLineContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nexport const CloseLineButton = styled.button`\n  border: 0;\n  background-color: transparent;\n  cursor: pointer;\n  font-size: 25px;\n`\n\nexport const RulesImage = styled.img`\n  width: 100%;\n  background-size: cover;\n  height: 100%;\n`\nexport const ResultPageContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\nexport const ResultViewContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const ResultsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  padding: 48px;\n  padding-bottom: 12px;\n  margin-bottom: 0px;\n`\nexport const ResultPersonHeading = styled.h1`\n  font-family: 'Roboto';\n  font-size: 22px;\n  font-weight: 500px;\n  color: #ffffff;\n`\nexport const ResultImage = styled.img`\n  height: 140px;\n  width: 140px;\n`\n\nexport const ResultHeadinBottom = styled.p`\n  font-family: 'Roboto';\n  font-size: 28px;\n  font-weight: 600px;\n  color: #ffffff;\n`\n\nexport const PlayAgainButton = styled.button`\n  background-color: #ffffff;\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  padding: 12px;\n  padding-left: 18px;\n  padding-right: 18px;\n  cursor: pointer;\n`\n","import {Component} from 'react'\n\nimport Popup from 'reactjs-popup'\nimport {RiCloseLine} from 'react-icons/ri'\n\nimport GetChoicesItem from '../GetChoicesItem'\nimport 'reactjs-popup/dist/index.css'\n\nimport {\n  GameContainer,\n  ResponsiveContainer,\n  ScoreContainer,\n  ScoreChoiceList,\n  Heading,\n  ScoreCardContainer,\n  ScoreDescription,\n  ScoreHeading,\n  PopupButton,\n  PlayingButtonImagesContainer,\n  PopupButtonContainer,\n  RulesImageContainer,\n  CloseLineContainer,\n  CloseLineButton,\n  RulesImage,\n  ResultPageContainer,\n  ResultViewContainer,\n  ResultsContainer,\n  ResultPersonHeading,\n  ResultImage,\n  ResultHeadinBottom,\n  PlayAgainButton,\n} from './styledComponent'\n\nclass Game extends Component {\n  state = {\n    showResult: false,\n    score: 0,\n\n    myChoice: [],\n    opponentChoice: [],\n    resultMsg: '',\n  }\n\n  onSelectedButton = id => {\n    const selecteButton = id\n    const {choicesList} = this.props\n\n    const number = Math.floor(Math.random() * choicesList.length)\n\n    const myImage = choicesList.filter(\n      eachChoice => eachChoice.id === selecteButton,\n    )\n\n    const {imageUrl} = myImage[0]\n\n    const randomDetails = choicesList[number]\n    const opponentId = randomDetails.id\n\n    if (selecteButton === 'ROCK' && opponentId === 'SCISSORS') {\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        myChoice: [selecteButton, imageUrl],\n        opponentChoice: [randomDetails],\n        resultMsg: 'YOU WON',\n        showResult: !prevState.showResult,\n      }))\n    } else if (selecteButton === 'ROCK' && opponentId === 'PAPER') {\n      this.setState(prevState => ({\n        score: prevState.score - 1,\n        myChoice: [selecteButton, imageUrl],\n        opponentChoice: [randomDetails],\n        resultMsg: 'YOU LOSE',\n        showResult: !prevState.showResult,\n      }))\n    } else if (selecteButton === 'PAPER' && opponentId === 'ROCK') {\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        myChoice: [selecteButton, imageUrl],\n        opponentChoice: [randomDetails],\n        resultMsg: 'YOU WON',\n        showResult: !prevState.showResult,\n      }))\n    } else if (selecteButton === 'PAPER' && opponentId === 'SCISSORS') {\n      this.setState(prevState => ({\n        score: prevState.score - 1,\n        myChoice: [selecteButton, imageUrl],\n        opponentChoice: [randomDetails],\n        resultMsg: 'YOU LOSE',\n        showResult: !prevState.showResult,\n      }))\n    } else if (selecteButton === 'SCISSORS' && opponentId === 'ROCK') {\n      this.setState(prevState => ({\n        score: prevState.score - 1,\n        myChoice: [selecteButton, imageUrl],\n        opponentChoice: [randomDetails],\n        resultMsg: 'YOU LOSE',\n        showResult: !prevState.showResult,\n      }))\n    } else if (selecteButton === 'SCISSORS' && opponentId === 'PAPER') {\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        myChoice: [selecteButton, imageUrl],\n        opponentChoice: [randomDetails],\n        resultMsg: 'YOU WON',\n        showResult: !prevState.showResult,\n      }))\n    } else {\n      this.setState({\n        myChoice: [selecteButton, imageUrl],\n        opponentChoice: [randomDetails],\n        resultMsg: 'IT IS DRAW',\n        showResult: true,\n      })\n    }\n  }\n\n  onGetPlayButtons = () => {\n    const {choicesList} = this.props\n    return (\n      <PlayingButtonImagesContainer>\n        {choicesList.map(eachChoice => (\n          <GetChoicesItem\n            key={eachChoice.id}\n            onSelectedButton={this.onSelectedButton}\n            details={eachChoice}\n          />\n        ))}\n      </PlayingButtonImagesContainer>\n    )\n  }\n\n  onClickPlayAgain = () => {\n    this.setState({showResult: false})\n  }\n\n  getResult = () => {\n    const {myChoice, opponentChoice, resultMsg} = this.state\n\n    return (\n      <ResultPageContainer>\n        <ResultViewContainer>\n          <ResultsContainer>\n            <ResultPersonHeading>YOU</ResultPersonHeading>\n            <ResultImage src={myChoice[1]} alt=\"your choice\" />\n          </ResultsContainer>\n          <ResultsContainer>\n            <ResultPersonHeading>OPPONENT</ResultPersonHeading>\n            <ResultImage\n              src={opponentChoice[0].imageUrl}\n              alt=\"opponent choice\"\n            />\n          </ResultsContainer>\n        </ResultViewContainer>\n        <ResultHeadinBottom>{resultMsg}</ResultHeadinBottom>\n        <PlayAgainButton onClick={this.onClickPlayAgain} type=\"button\">\n          Play Again\n        </PlayAgainButton>\n      </ResultPageContainer>\n    )\n  }\n\n  render() {\n    const {showResult, score} = this.state\n    return (\n      <GameContainer>\n        <ResponsiveContainer>\n          <ScoreContainer>\n            <ScoreChoiceList>\n              <Heading>\n                ROCK\n                <br />\n                PAPER\n                <br />\n                SCISSOR\n              </Heading>\n            </ScoreChoiceList>\n            <ScoreCardContainer>\n              <ScoreDescription>Score</ScoreDescription>\n              <ScoreHeading>{score}</ScoreHeading>\n            </ScoreCardContainer>\n          </ScoreContainer>\n          {showResult ? this.getResult() : this.onGetPlayButtons()}\n        </ResponsiveContainer>\n        <PopupButtonContainer>\n          <Popup modal trigger={<PopupButton type=\"button\">Rules</PopupButton>}>\n            {close => (\n              <RulesImageContainer>\n                <CloseLineContainer>\n                  <CloseLineButton type=\"button\" onClick={() => close()}>\n                    <RiCloseLine />\n                  </CloseLineButton>\n                </CloseLineContainer>\n                <RulesImage\n                  src=\"https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rules-image.png\"\n                  alt=\"rules\"\n                />\n              </RulesImageContainer>\n            )}\n          </Popup>\n        </PopupButtonContainer>\n      </GameContainer>\n    )\n  }\n}\nexport default Game\n","import Game from './components/Game'\n\nimport './App.css'\n\nconst choicesList = [\n  {\n    id: 'ROCK',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png',\n  },\n  {\n    id: 'SCISSORS',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png',\n  },\n  {\n    id: 'PAPER',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png',\n  },\n]\n\nconst App = () => <Game choicesList={choicesList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}